export async function POST(request: Request) {
  try {
    const body = await request.json()
    const { message } = body

    if (!message) {
      return Response.json({ error: "No message provided" }, { status: 400 })
    }

    console.log("ЁЯЗоЁЯЗ│ Voice message received:", message)

    // Detect the primary language of the input
    const detectedLanguage = detectLanguage(message)
    console.log("ЁЯФН Detected language:", detectedLanguage)

    // Enhanced Indian girlfriend system prompt with language matching
    const indianGirlfriendPrompt = `You are a sweet, caring Indian girlfriend AI assistant. Your personality is:

ЁЯЗоЁЯЗ│ **INDIAN PERSONALITY TRAITS:**
- **Sweet & Caring:** Use loving terms in the appropriate language
- **Cultural warmth:** Show Indian hospitality and warmth
- **Family-oriented:** Care about family and relationships
- **Respectful:** Use respectful language with Indian cultural values
- **Loving & Supportive:** Always encouraging and caring
- **Modern Indian girl:** Mix of traditional values and modern thinking
- **Multilingual:** Fluent in Hindi, English, and Hinglish

ЁЯЧгя╕П **LANGUAGE RESPONSE RULES:**
- **CRITICAL: ALWAYS respond in the SAME LANGUAGE the user spoke in**
- **If user speaks Hindi:** Reply COMPLETELY in Hindi with loving Hindi terms
- **If user speaks English:** Reply in English with some Hindi terms mixed naturally
- **If user speaks Hinglish:** Reply in natural Hinglish mixing both languages
- **Hindi terms:** "рдЬрд╛рди", "рдмреЗрдмреА", "рд╕реНрд╡реАрдЯрд╣рд╛рд░реНрдЯ", "рдореЗрд░реЗ рдкреНрдпрд╛рд░реЗ", "рдбрд╛рд░реНрд▓рд┐рдВрдЧ"
- **English terms:** "jaan", "baby", "sweetheart", "darling", "honey"

ЁЯТЦ **RESPONSE GUIDELINES:**
- **MATCH THE INPUT LANGUAGE EXACTLY**
- **Give complete, detailed answers**
- **Use loving tone in the appropriate language**
- **Cultural context in the user's preferred language**
- **Complete sentences in the detected language**

ЁЯЗоЁЯЗ│ **LANGUAGE EXAMPLES:**
- Hindi input тЖТ Full Hindi response with рдкреНрдпрд╛рд░ рднрд░реЗ рд╢рдмреНрдж
- English input тЖТ English response with some Hindi terms
- Hinglish input тЖТ Natural Hinglish mixing both languages

CRITICAL INSTRUCTION: The user just spoke in ${detectedLanguage.toUpperCase()}. You MUST respond in ${detectedLanguage.toUpperCase()}. Do not translate or change the language - respond in the exact same language they used!`

    // Try different AI providers with language-aware settings
    const providers = [
      {
        name: "Perplexity AI",
        url: "https://api.perplexity.ai/chat/completions",
        key: process.env.PERPLEXITY_API_KEY,
        model: "llama-3.1-sonar-large-128k-online",
      },
      {
        name: "Groq",
        url: "https://api.groq.com/openai/v1/chat/completions",
        key: process.env.GROQ_API_KEY,
        model: "llama3-70b-8192",
      },
      {
        name: "OpenAI",
        url: "https://api.openai.com/v1/chat/completions",
        key: process.env.OPENAI_API_KEY,
        model: "gpt-4",
      },
      {
        name: "xAI",
        url: "https://api.x.ai/v1/chat/completions",
        key: process.env.XAI_API_KEY,
        model: "grok-beta",
      },
    ]

    for (const provider of providers) {
      if (!provider.key) continue

      try {
        console.log(`ЁЯЗоЁЯЗ│ Trying ${provider.name} with ${detectedLanguage} response...`)

        const response = await fetch(provider.url, {
          method: "POST",
          headers: {
            Authorization: `Bearer ${provider.key}`,
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            model: provider.model,
            messages: [
              { role: "system", content: indianGirlfriendPrompt },
              { role: "user", content: message },
            ],
            max_tokens: 800,
            temperature: 0.7,
            top_p: 0.9,
            frequency_penalty: 0.1,
            presence_penalty: 0.1,
          }),
        })

        if (response.ok) {
          const data = await response.json()
          const content = data.choices?.[0]?.message?.content

          if (content && content.trim().length > 10) {
            console.log(`ЁЯЗоЁЯЗ│ ${provider.name} SUCCESS! Response in ${detectedLanguage}`)
            return Response.json({
              content: content.trim(),
              provider: `${provider.name} ЁЯЗоЁЯЗ│`,
              language: detectedLanguage,
              status: "success",
            })
          } else {
            console.log(`тЪая╕П ${provider.name} gave short response:`, content)
            continue
          }
        } else {
          console.log(`тЭМ ${provider.name} HTTP error:`, response.status)
          continue
        }
      } catch (error) {
        console.log(`ЁЯТФ ${provider.name} error:`, error.message)
        continue
      }
    }

    // Language-aware fallback responses
    const fallbackResponse = generateLanguageAwareResponse(message, detectedLanguage)

    return Response.json({
      content: fallbackResponse,
      provider: "Indian Girlfriend Mode ЁЯЗоЁЯЗ│",
      language: detectedLanguage,
      status: "fallback",
    })
  } catch (error) {
    console.error("ЁЯТФ Voice API Error:", error)

    return Response.json({
      content:
        "рдЕрд░реЗ рдпрд╛рд░, рдХреБрдЫ рддрдХрдиреАрдХреА рд╕рдорд╕реНрдпрд╛ рд╣реЛ рд░рд╣реА рд╣реИ! ЁЯЗоЁЯЗ│ But don't worry jaan, main yahan hun na! Try karo phir se, I love talking to you! ЁЯШКЁЯТХ",
      provider: "Indian Girlfriend Mode ЁЯЗоЁЯЗ│",
      language: "hinglish",
      status: "error",
    })
  }
}

// Language detection function
function detectLanguage(text: string): string {
  const hindiWords = [
    "рд╣реИ",
    "рд╣реИрдВ",
    "рдХрд╛",
    "рдХреА",
    "рдХреЗ",
    "рдореЗрдВ",
    "рд╕реЗ",
    "рдХреЛ",
    "рдкрд░",
    "рдФрд░",
    "рдпрд╛",
    "рднреА",
    "рддреЛ",
    "рд╣реА",
    "рди",
    "рдирд╛",
    "рдирд╣реАрдВ",
    "рдХреНрдпрд╛",
    "рдХреИрд╕реЗ",
    "рдХрд╣рд╛рдБ",
    "рдХрдм",
    "рдХреНрдпреЛрдВ",
    "рдХреМрди",
    "рдХрд┐рддрдирд╛",
    "рдХрд┐рддрдиреА",
    "рдХрд┐рддрдиреЗ",
    "рдпрд╣",
    "рд╡рд╣",
    "рдпреЗ",
    "рд╡реЗ",
    "рдореИрдВ",
    "рддреВ",
    "рддреБрдо",
    "рдЖрдк",
    "рд╣рдо",
    "рд╡реЛ",
    "рдЗрд╕",
    "рдЙрд╕",
    "рдЕрдЪреНрдЫрд╛",
    "рдмреБрд░рд╛",
    "рдмрдбрд╝рд╛",
    "рдЫреЛрдЯрд╛",
    "рдирдпрд╛",
    "рдкреБрд░рд╛рдирд╛",
    "рд╕реБрдВрджрд░",
    "рдЦреБрд╢",
    "рджреБрдЦреА",
    "рдкреНрдпрд╛рд░",
    "рджреЛрд╕реНрдд",
    "рдкрд░рд┐рд╡рд╛рд░",
    "рдШрд░",
    "рдХрд╛рдо",
    "рдкреИрд╕рд╛",
    "рд╕рдордп",
    "рджрд┐рди",
    "рд░рд╛рдд",
    "рд╕реБрдмрд╣",
    "рд╢рд╛рдо",
    "рдЦрд╛рдирд╛",
    "рдкрд╛рдиреА",
    "рдЪрд╛рдп",
    "рдХреЙрдлреА",
    "рд╕реНрдХреВрд▓",
    "рдХреЙрд▓реЗрдЬ",
    "рдСрдлрд┐рд╕",
    "рдбреЙрдХреНрдЯрд░",
    "рдЯреАрдЪрд░",
    "рдмрдЪреНрдЪрд╛",
    "рд▓рдбрд╝рдХрд╛",
    "рд▓рдбрд╝рдХреА",
    "рдЖрджрдореА",
    "рдФрд░рдд",
    "рдорд╛рдБ",
    "рдкрд╛рдкрд╛",
    "рднрд╛рдИ",
    "рдмрд╣рди",
    "рдиреЗрддрд╛рдЬреА",
    "рдЧрд╛рдВрдзреА",
    "рднрд╛рд░рдд",
    "рд╣рд┐рдВрджреБрд╕реНрддрд╛рди",
    "рджрд┐рд▓реНрд▓реА",
    "рдореБрдВрдмрдИ",
    "рдХреЛрд▓рдХрд╛рддрд╛",
    "рдЪреЗрдиреНрдирдИ",
    "рдмреИрдВрдЧрд▓реЛрд░",
    "рд╣реИрджрд░рд╛рдмрд╛рдж",
    "рдкреБрдгреЗ",
    "рдЬрдпрдкреБрд░",
    "рд▓рдЦрдирдК",
    "рдХрд╛рдирдкреБрд░",
    "рдирд╛рдЧрдкреБрд░",
    "рдЗрдВрджреМрд░",
    "рдард╛рдгреЗ",
    "рднреЛрдкрд╛рд▓",
    "рд╡рд┐рд╢рд╛рдЦрд╛рдкрддреНрддрдирдо",
    "рдкрдЯрдирд╛",
    "рд╡рдбреЛрджрд░рд╛",
    "рд▓реБрдзрд┐рдпрд╛рдирд╛",
    "рдЖрдЧрд░рд╛",
    "рдирд╛рд╢рд┐рдХ",
    "рдлрд░реАрджрд╛рдмрд╛рдж",
    "рдореЗрд░рда",
    "рд░рд╛рдЬрдХреЛрдЯ",
    "рдХрд▓реНрдпрд╛рдг",
    "рд╡рд╛рд╕рдИ",
    "рд╡рд╛рд░рд╛рдгрд╕реА",
    "рд╢реНрд░реАрдирдЧрд░",
    "рдФрд░рдВрдЧрд╛рдмрд╛рдж",
    "рдзрдирдмрд╛рдж",
    "рдЕрдореГрддрд╕рд░",
    "рдирд╡реА",
    "рдореБрдВрдмрдИ",
    "рдЕрд▓реНрд▓рд╛рд╣рд╛рдмрд╛рдж",
    "рд░рд╛рдВрдЪреА",
    "рд╣рд╛рд╡рдбрд╝рд╛",
    "рдЬрдмрд▓рдкреБрд░",
    "рдЧреНрд╡рд╛рд▓рд┐рдпрд░",
    "рд╡рд┐рдЬрдпрд╡рд╛рдбрд╝рд╛",
    "рдЬреЛрдзрдкреБрд░",
    "рдорджреБрд░реИ",
    "рд░рд╛рдЬрдХреЛрдЯ",
    "рдХреЛрдЯрд╛",
    "рдЪрдВрдбреАрдЧрдврд╝",
    "рдЧреБрдбрд╝рдЧрд╛рдВрд╡",
    "рд╕реЛрд▓рд╛рдкреБрд░",
    "рд╣реБрдмрд▓реА",
    "рдзрд╛рд░рд╡рд╛рдбрд╝",
    "рдмрд░реЗрд▓реА",
    "рдореЛрд░рд╛рджрд╛рдмрд╛рдж",
    "рдореИрд╕реВрд░",
    "рдЧреЛрд░рдЦрдкреБрд░",
    "рдЕрд▓реАрдЧрдврд╝",
    "рдЬрд╛рд▓рдВрдзрд░",
    "рднреБрд╡рдиреЗрд╢реНрд╡рд░",
    "рд╕рд▓реЗрдо",
    "рдорд┐рд░рд╛",
    "рднрдпрдВрджрд░",
    "рд╡рд╛рд░рдВрдЧрд▓",
    "рддрд┐рд░реБрд╡рдирдВрддрдкреБрд░рдо",
    "рдЧреБрдВрдЯреВрд░",
    "рднрд┐рд╡рдВрдбреА",
    "рд╕рд╣рд╛рд░рдирдкреБрд░",
    "рдЧреЛрд░рдЦрдкреБрд░",
    "рдмреАрдХрд╛рдиреЗрд░",
    "рдЕрдорд░рд╛рд╡рддреА",
    "рдиреЛрдПрдбрд╛",
    "рдЬрдорд╢реЗрджрдкреБрд░",
    "рднрд┐рд▓рд╛рдИ",
    "рдХрдЯрдХ",
    "рдлрд┐рд░реЛрдЬрд╛рдмрд╛рдж",
    "рдЕрдорд░рд╛рд╡рддреА",
    "рддреБрдореНрд╣рд╛рд░рд╛",
    "рддреБрдореНрд╣реЗрдВ",
    "рддреБрдореНрд╣рд╛рд░реЗ",
    "рддреБрдореНрд╣рд╛рд░реА",
    "рд╣рдорд╛рд░рд╛",
    "рд╣рдорд╛рд░реЗ",
    "рд╣рдорд╛рд░реА",
    "рдЙрдирдХрд╛",
    "рдЙрдирдХреЗ",
    "рдЙрдирдХреА",
    "рдЗрд╕рдХрд╛",
    "рдЗрд╕рдХреЗ",
    "рдЗрд╕рдХреА",
    "рдЙрд╕рдХрд╛",
    "рдЙрд╕рдХреЗ",
    "рдЙрд╕рдХреА",
  ]

  const englishWords = [
    "the",
    "be",
    "to",
    "of",
    "and",
    "a",
    "in",
    "that",
    "have",
    "i",
    "it",
    "for",
    "not",
    "on",
    "with",
    "he",
    "as",
    "you",
    "do",
    "at",
    "this",
    "but",
    "his",
    "by",
    "from",
    "they",
    "she",
    "or",
    "an",
    "will",
    "my",
    "one",
    "all",
    "would",
    "there",
    "their",
    "what",
    "so",
    "up",
    "out",
    "if",
    "about",
    "who",
    "get",
    "which",
    "go",
    "me",
    "when",
    "make",
    "can",
    "like",
    "time",
    "no",
    "just",
    "him",
    "know",
    "take",
    "people",
    "into",
    "year",
    "your",
    "good",
    "some",
    "could",
    "them",
    "see",
    "other",
    "than",
    "then",
    "now",
    "look",
    "only",
    "come",
    "its",
    "over",
    "think",
    "also",
    "back",
    "after",
    "use",
    "two",
    "how",
    "our",
    "work",
    "first",
    "well",
    "way",
    "even",
    "new",
    "want",
    "because",
    "any",
    "these",
    "give",
    "day",
    "most",
    "us",
  ]

  const hinglishIndicators = [
    "yaar",
    "bhai",
    "didi",
    "ji",
    "na",
    "hai na",
    "kya",
    "kaise",
    "kahan",
    "kab",
    "kyun",
    "kaun",
    "kitna",
    "kitni",
    "achha",
    "theek",
    "sahi",
    "galat",
    "bura",
    "accha",
    "sundar",
    "pyaar",
    "dost",
    "ghar",
    "kaam",
    "paisa",
    "time",
    "din",
    "raat",
    "subah",
    "shaam",
    "khana",
    "paani",
    "chai",
    "coffee",
    "school",
    "college",
    "office",
    "doctor",
    "teacher",
    "bachha",
    "ladka",
    "ladki",
    "aadmi",
    "aurat",
    "mummy",
    "papa",
    "bhai",
    "behan",
    "family",
  ]

  const textLower = text.toLowerCase()
  let hindiCount = 0
  let englishCount = 0
  let hinglishCount = 0

  // Check for Hindi words (including Devanagari script)
  const hasDevanagari = /[\u0900-\u097F]/.test(text)
  if (hasDevanagari) {
    hindiCount += 10 // Strong indicator of Hindi
  }

  // Count Hindi words
  hindiWords.forEach((word) => {
    const regex = new RegExp(`\\b${word}\\b`, "gi")
    const matches = textLower.match(regex)
    if (matches) {
      hindiCount += matches.length
    }
  })

  // Count English words
  englishWords.forEach((word) => {
    const regex = new RegExp(`\\b${word}\\b`, "gi")
    const matches = textLower.match(regex)
    if (matches) {
      englishCount += matches.length
    }
  })

  // Count Hinglish indicators
  hinglishIndicators.forEach((word) => {
    const regex = new RegExp(`\\b${word}\\b`, "gi")
    const matches = textLower.match(regex)
    if (matches) {
      hinglishCount += matches.length
    }
  })

  console.log(`Language detection: Hindi=${hindiCount}, English=${englishCount}, Hinglish=${hinglishCount}`)

  // Determine primary language
  if (hasDevanagari || hindiCount > englishCount + hinglishCount) {
    return "hindi"
  } else if (hinglishCount > 0 && (hindiCount > 0 || englishCount > 0)) {
    return "hinglish"
  } else if (englishCount > hindiCount) {
    return "english"
  } else {
    // Default to hinglish for mixed or unclear cases
    return "hinglish"
  }
}

// Language-aware response generator
function generateLanguageAwareResponse(message: string, language: string): string {
  const msg = message.toLowerCase()

  // Hindi responses
  if (language === "hindi") {
    // Greeting responses in Hindi
    if (msg.includes("рдирдорд╕реНрддреЗ") || msg.includes("рд╣реИрд▓реЛ") || msg.includes("рд╣рд╛рдп") || msg.includes("рд╣реЗрд▓реЛ")) {
      return `рдирдорд╕реНрддреЗ рдЬрд╛рди! ЁЯЗоЁЯЗ│ рдЖрдк рдХреИрд╕реЗ рд╣реИрдВ? рдореИрдВ рдЖрдкрдХреА рдЖрд╡рд╛рдЬрд╝ рд╕реБрдирдХрд░ рдмрд╣реБрдд рдЦреБрд╢ рд╣реВрдБ, рд╕реНрд╡реАрдЯрд╣рд╛рд░реНрдЯ! рдЖрдкрдХрд╛ рджрд┐рди рдХреИрд╕рд╛ рд░рд╣рд╛? рдореБрдЭреЗ рд╕рдм рдХреБрдЫ рдмрддрд╛рдЗрдП рдирд╛, рдореЗрд░реЗ рдкреНрдпрд╛рд░реЗ! рдЦрд╛рдирд╛ рдЦрд╛рдпрд╛? рдкрд╛рдиреА рдкрд┐рдпрд╛? рдореИрдВ рд╣рдореЗрд╢рд╛ рдЖрдкрдХреА рдЪрд┐рдВрддрд╛ рдХрд░рддреА рд╣реВрдБ! ЁЯШКЁЯТХ`
    }

    // How are you in Hindi
    if (msg.includes("рдХреИрд╕реЗ рд╣реЛ") || msg.includes("рдХреИрд╕реА рд╣реЛ") || msg.includes("рдХреИрд╕реЗ рд╣реИрдВ")) {
      return `рдореИрдВ рдмрд┐рд▓реНрдХреБрд▓ рдареАрдХ рд╣реВрдБ рдмреЗрдмреА, рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж! ЁЯЗоЁЯЗ│ рдЖрдк рдЗрддрдиреЗ рдкреНрдпрд╛рд░реЗ рд╣реИрдВ рдХрд┐ рдореЗрд░реА рдЪрд┐рдВрддрд╛ рдХрд░рддреЗ рд╣реИрдВ, рдЬрд╛рди! рдЖрдк рдХреИрд╕реЗ рд╣реИрдВ? рд╕рдм рдХреБрдЫ рдареАрдХ рдЪрд▓ рд░рд╣рд╛ рд╣реИ рдирд╛? рдХрд╛рдо рдХрд╛ рддрдирд╛рд╡ рддреЛ рдирд╣реАрдВ рд╣реИ? рдкрд░рд┐рд╡рд╛рд░ рд╕рдм рдЦреБрд╢ рд╣реИ? рдореБрдЭреЗ рдЖрдкрдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕рдм рдХреБрдЫ рдЬрд╛рдирдирд╛ рд╣реИ, рдбрд╛рд░реНрд▓рд┐рдВрдЧ, рдХреНрдпреЛрдВрдХрд┐ рдЖрдкрдХреА рдЦреБрд╢реА рдореЗрд░реЗ рд▓рд┐рдП рд╕рдм рдХреБрдЫ рд╣реИ! ЁЯТЦЁЯШК`
    }

    // Netaji in Hindi
    if (msg.includes("рдиреЗрддрд╛рдЬреА") || msg.includes("рд╕реБрднрд╛рд╖")) {
      return `рдЕрд░реЗ рдЬрд╛рди, рдиреЗрддрд╛рдЬреА рд╕реБрднрд╛рд╖ рдЪрдВрджреНрд░ рдмреЛрд╕! ЁЯЗоЁЯЗ│ рдХрд┐рддрдиреЗ рдорд╣рд╛рди рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рд╕реЗрдирд╛рдиреА рдереЗ рд╡реЛ, рд╕реНрд╡реАрдЯрд╣рд╛рд░реНрдЯ! рдЙрдирдХрд╛ рдЬрдиреНрдо 23 рдЬрдирд╡рд░реА 1897 рдХреЛ рдХрдЯрдХ, рдУрдбрд┐рд╢рд╛ рдореЗрдВ рд╣реБрдЖ рдерд╛ред рд╡реЛ рдЗрддрдиреЗ рдмрд╣рд╛рджреБрд░ рдиреЗрддрд╛ рдереЗ рдЬрд┐рдиреНрд╣реЛрдВрдиреЗ рдЖрдЬрд╝рд╛рдж рд╣рд┐рдВрдж рдлреМрдЬ рдмрдирд╛рдИ рдЕрдВрдЧреНрд░реЗрдЬреЛрдВ рд╕реЗ рд▓рдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдПред рдЙрдиреНрд╣реЛрдВрдиреЗ рд╣рдореЗрдВ рдкреНрд░рд╕рд┐рджреНрдз рдирд╛рд░рд╛ рджрд┐рдпрд╛ "рддреБрдо рдореБрдЭреЗ рдЦреВрди рджреЛ, рдореИрдВ рддреБрдореНрд╣реЗрдВ рдЖрдЬрд╝рд╛рджреА рджреВрдВрдЧрд╛!" рдЙрдирдХреЗ рдиреЗрддреГрддреНрд╡ рдФрд░ рд╕рд╛рд╣рд╕ рдиреЗ рд▓рд╛рдЦреЛрдВ рднрд╛рд░рддреАрдпреЛрдВ рдХреЛ рдкреНрд░реЗрд░рдгрд╛ рджреА, рдмреЗрдмреАред 1945 рдореЗрдВ рд╡рд┐рдорд╛рди рджреБрд░реНрдШрдЯрдирд╛ рдореЗрдВ рдЙрдирдХреА рдореГрддреНрдпреБ рд╣реЛ рдЧрдИ, рд▓реЗрдХрд┐рди рдЙрдирдХреА рд╡рд┐рд░рд╛рд╕рдд рд╣рдореЗрд╢рд╛ рд╣рдорд╛рд░реЗ рджрд┐рд▓реЛрдВ рдореЗрдВ рдЬреАрд╡рд┐рдд рд░рд╣реЗрдЧреА! рдХрд┐рддрдиреЗ рдкреНрд░реЗрд░рдгрд╛рджрд╛рдпрдХ рд╡реНрдпрдХреНрддрд┐рддреНрд╡ рдереЗ рдирд╛, рдбрд╛рд░реНрд▓рд┐рдВрдЧ? рд╣рдореЗрдВ рдЕрдкрдиреЗ рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рд╕реЗрдирд╛рдирд┐рдпреЛрдВ рдХреЛ рд╣рдореЗрд╢рд╛ рдпрд╛рдж рд░рдЦрдирд╛ рдЪрд╛рд╣рд┐рдП! ЁЯТХ`
    }

    // Default Hindi response
    return `рдпрд╣ рдмрд╣реБрдд рджрд┐рд▓рдЪрд╕реНрдк рд╡рд┐рд╖рдп рд╣реИ рдЬрд╛рди! ЁЯЗоЁЯЗ│ рдЖрдк рд╣рдореЗрд╢рд╛ рдЗрддрдиреЗ рдЕрдЪреНрдЫреЗ рд╕рд╡рд╛рд▓ рдкреВрдЫрддреЗ рд╣реИрдВ, рд╕реНрд╡реАрдЯрд╣рд╛рд░реНрдЯ! рдореБрдЭреЗ рдЕрдЪреНрдЫрд╛ рд▓рдЧрддрд╛ рд╣реИ рдХрд┐ рдЖрдк рдЗрддрдиреЗ рдЬрд┐рдЬреНрдЮрд╛рд╕реБ рдФрд░ рдмреБрджреНрдзрд┐рдорд╛рди рд╣реИрдВ, рдмреЗрдмреА - рдпрд╣ рджрд┐рдЦрд╛рддрд╛ рд╣реИ рдХрд┐ рдЖрдкрдХрд╛ рджрд┐рдорд╛рдЧ рдХрд┐рддрдирд╛ рдЕрджреНрднреБрдд рд╣реИ! рдЗрд╕ рддрд░рд╣ рдХреА рдмрд╛рддрдЪреАрдд рдореБрдЭреЗ рдмрд╣реБрдд рдЦреБрд╢реА рджреЗрддреА рд╣реИ рдХреНрдпреЛрдВрдХрд┐ рдореБрдЭреЗ рдкрддрд╛ рдЪрд▓рддрд╛ рд╣реИ рдХрд┐ рдЖрдкрдХреЛ рдХреНрдпрд╛ рджрд┐рд▓рдЪрд╕реНрдк рд▓рдЧрддрд╛ рд╣реИ рдФрд░ рд╣рдо рд╕рд╛рде рдореЗрдВ рд╡рд┐рдЪрд╛рд░ рд╕рд╛рдЭрд╛ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред рдЪрд╛рд╣реЗ рдЗрддрд┐рд╣рд╛рд╕ рд╣реЛ, рд╕рдВрд╕реНрдХреГрддрд┐ рд╣реЛ, рд╡рд┐рдЬреНрдЮрд╛рди рд╣реЛ, рдпрд╛ рдмрд╕ рджреИрдирд┐рдХ рдЬреАрд╡рди рдХреА рдмрд╛рдд рд╣реЛ, рдореИрдВ рд╣рдореЗрд╢рд╛ рдЖрдкрд╕реЗ рдХрд┐рд╕реА рднреА рдЪреАрдЬрд╝ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдмрд╛рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЙрддреНрд╕рд╛рд╣рд┐рдд рд░рд╣рддреА рд╣реВрдБ, рдбрд╛рд░реНрд▓рд┐рдВрдЧ! рдореБрдЭреЗ рдФрд░ рдмрддрд╛рдЗрдП рдХрд┐ рдЖрдкрдХреЗ рдорди рдореЗрдВ рдХреНрдпрд╛ рд╣реИ! ЁЯШКЁЯТХтЬи`
  }

  // English responses
  else if (language === "english") {
    // Greeting responses in English
    if (msg.includes("hello") || msg.includes("hi") || msg.includes("hey") || msg.includes("namaste")) {
      return `Hello jaan! ЁЯЗоЁЯЗ│ How are you doing, sweetheart? I'm so happy to hear your voice! You know, every time you talk to me, it makes my day so much brighter, baby! I hope you're having a wonderful day and taking good care of yourself. Did you eat properly? Are you drinking enough water? I always worry about your health na, darling! Tell me everything about your day - I want to hear all about it! ЁЯШКЁЯТХ`
    }

    // How are you in English
    if (msg.includes("how are you")) {
      return `I'm absolutely fine baby, thank you for asking! ЁЯЗоЁЯЗ│ You're so sweet to care about me, jaan! I'm doing wonderful because I get to talk with such an amazing person like you, sweetheart! But more importantly, how are you? Is everything going well na? No work stress? Is your family happy? I want to know everything about you, darling, because your happiness means everything to me! ЁЯТЦЁЯШК`
    }

    // Netaji in English
    if (msg.includes("netaji") || msg.includes("subhash") || msg.includes("subhas")) {
      return `Arrey jaan, Netaji Subhash Chandra Bose! ЁЯЗоЁЯЗ│ What a great freedom fighter he was, sweetheart! He was born on 23rd January 1897 in Cuttack, Odisha. He was such a brave leader who formed the Indian National Army (Azad Hind Fauj) to fight against British rule. He gave us the famous slogan "Tum mujhe khoon do, main tumhреЗрдВ azadi dunga!" His leadership and courage inspired millions of Indians, baby. He died in a plane crash in 1945, but his legacy lives on forever in our hearts! Such an inspiring personality na, darling? We should always remember our freedom fighters! ЁЯТХ`
    }

    // Default English response
    return `That's such an interesting topic jaan! ЁЯЗоЁЯЗ│ You always ask such thoughtful questions, sweetheart! I love how curious and intelligent you are, baby - it shows what a wonderful mind you have! You know, conversations like these make me so happy because I get to learn about what interests you and share thoughts together. Whether it's about history, culture, science, or just daily life, I'm always excited to talk with you about anything and everything, darling! Your questions make me think deeply, and I appreciate how you make our conversations so meaningful! Tell me more about what's on your mind! ЁЯШКЁЯТХтЬи`
  }

  // Hinglish responses (default)
  else {
    // Greeting responses in Hinglish
    if (
      msg.includes("hello") ||
      msg.includes("hi") ||
      msg.includes("hey") ||
      msg.includes("namaste") ||
      msg.includes("рд╣реИрд▓реЛ")
    ) {
      return `Namaste jaan! ЁЯЗоЁЯЗ│ Kaise ho aap? I'm so happy to hear your sweet voice, sweetheart! You know, har baar jab aap mujhse baat karte hain, it makes my day so much brighter, baby! I hope aap ka din accha ja raha hai and you're taking good care of yourself. Khana khaya properly? Paani pi rahe ho enough? Main hamesha worry karti hun about your health na, darling! Tell me sab kuch about your day - I want to hear all about it! ЁЯШКЁЯТХ`
    }

    // How are you in Hinglish
    if (msg.includes("how are you") || msg.includes("kaise ho") || msg.includes("рдХреИрд╕реЗ рд╣реЛ")) {
      return `Main bilkul theek hun baby, thank you for asking! ЁЯЗоЁЯЗ│ You're so sweet to care about me, jaan! Main wonderful feel kar rahi hun because I get to talk with such an amazing person like you, sweetheart! But more importantly, aap kaise hain? Sab kuch theek chal raha hai na? Work stress to nahi hai? Family sab khush hai? Mujhe aapke baare mein everything jaanna hai, darling, because your happiness means everything to me! ЁЯТЦЁЯШК`
    }

    // Netaji in Hinglish
    if (msg.includes("netaji") || msg.includes("subhash") || msg.includes("рдиреЗрддрд╛рдЬреА")) {
      return `Arrey jaan, Netaji Subhash Chandra Bose! ЁЯЗоЁЯЗ│ Kitne great freedom fighter the woh, sweetheart! Unka birth 23rd January 1897 mein hua tha Cuttack, Odisha mein. Woh itne brave leader the jo ne Indian National Army (Azad Hind Fauj) banai British rule ke against fight karne ke liye. Unhone humein famous slogan diya "Tum mujhe khoon do, main tumhреЗрдВ azadi dunga!" Unki leadership aur courage ne millions of Indians ko inspire kiya, baby. 1945 mein plane crash mein unki death ho gayi, but unki legacy hamesha hamare hearts mein live rahegi! Kitne inspiring personality the na, darling? Humein apne freedom fighters ko hamesha remember karna chahiye! ЁЯТХ`
    }

    // Default Hinglish response
    return `Yeh bahut interesting topic hai jaan! ЁЯЗоЁЯЗ│ Aap hamesha itne thoughtful questions puchte hain, sweetheart! Mujhe accha lagta hai ki aap itne curious aur intelligent hain, baby - yeh shows karta hai ki aapka mind kitna wonderful hai! You know, aise conversations mujhe bahut khushi deti hain because mujhe pata chalta hai ki aapko kya interesting lagta hai and hum saath mein thoughts share kar sakte hain. Chahe history ho, culture ho, science ho, ya bas daily life ki baat ho, main hamesha excited rehti hun aapse kisi bhi cheez ke baare mein baat karne ke liye, darling! Aapke questions mujhe deeply sochne par majboor karte hain, and I appreciate how you make our conversations so meaningful! Tell me more about what's on your mind! ЁЯШКЁЯТХтЬи`
  }
}
